


import json
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *


class MainWidget(QWidget):
    def __init__(self):
        super(MainWidget, self).__init__()
        # –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.data = None
        self.groups_list = []

        # –≤–∏–¥–∂–µ—Ç—ã
        # self.tabs = QTabWidget()
        self.gb_groups = QGroupBox("–ì—Ä—É–ø–ø—ã")

        self.table = QTableWidget()
        self.table.setColumnCount(1)
        self.table.horizontalHeader().setStretchLastSection(True)

        self.gb_edit = QGroupBox("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã")
        self.edit_gr_name = QLineEdit()
        self.edit_gr_name.setPlaceholderText("–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã")
        self.rename_group_btn = QPushButton("–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É")
        self.rename_group_btn.setEnabled(False)
        self.add_group_btn = QPushButton("‚ûï")
        self.total_pupils_amount = QSpinBox()
        self.total_pupils_amount.setValue(9)
        self.table.setRowCount(self.total_pupils_amount.value())
        self.save_group = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.remove_group_btn = QPushButton("üóë")

        # –º–∞–∫–µ—Ç
        self.groups_layout = QVBoxLayout()
        gb_edit_layout = QVBoxLayout()
        group_name_layout = QHBoxLayout()
        group_name_layout.addWidget(self.edit_gr_name)
        group_name_layout.addWidget(self.rename_group_btn)
        group_name_layout.addWidget(self.add_group_btn)
        # gb_edit_layout.setAlignment(Qt.AlignAbsolute)
        gb_edit_layout.addLayout(group_name_layout)
        pupils_amount_layout = QHBoxLayout()
        pupils_amount_layout.addWidget(QLabel("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤"))
        pupils_amount_layout.addWidget(self.total_pupils_amount)
        gb_edit_layout.addLayout(pupils_amount_layout)
        buttons = QHBoxLayout()
        buttons.addWidget(self.save_group, stretch=9)
        buttons.addWidget(self.remove_group_btn, stretch=1)
        gb_edit_layout.addLayout(buttons)

        self.gb_edit.setLayout(gb_edit_layout)
        main_layout = QHBoxLayout()
        main_layout.addWidget(self.gb_groups, stretch=1)
        main_layout.addWidget(self.table, stretch=1)
        main_layout.addWidget(self.gb_edit, stretch=2)

        self.setLayout(main_layout)
        self.setWindowTitle("–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä—É–ø–ø")
        self.setFont(QFont(None, 20))

        self.load_from_file()
        self.edit_gr_name.textChanged.connect(self.enabled_rename_button)
        self.rename_group_btn.clicked.connect(self.rename_group)
        self.add_group_btn.clicked.connect(self.add_group)
        self.remove_group_btn.clicked.connect(self.remove_group)

        self.showMaximized()


    def load_from_file(self):
        filename = "data_test.json"
        try:
            with open(filename, "r") as file:
                self.data = json.load(file)
                print(self.data)
        except FileNotFoundError as e:
            try:
                with open(filename, "w") as file:
                    json.dump({}, file)
            except:
                pass
                mb = QMessageBox()
                mb.setWindowTitle("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª")
                mb.setText("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –ø–∞–ø–∫–µ —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î")
                mb.show()
                mb.exec_()
            else:
                mb = QMessageBox()
                mb.setWindowTitle("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª")
                mb.setText("–ë—ã–ª —Å–æ–∑–¥–∞–Ω —Ñ–∞–π–ª " + filename)
                mb.show()
                mb.exec_()
        else:
            self.fill_group_names()
        finally:
            for rb in self.groups_list:
                rb.clicked.connect(self.fill_table)

    def fill_group_names(self):
        groups_box = QButtonGroup()
        # –æ—á–∏—Å—Ç–∫–∞ –º–∞–∫–µ—Ç–∞ –æ—Ç –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –≥—Ä—É–ø–ø
        while self.groups_layout.count():
            child = self.groups_layout.takeAt(0)
            if child.widget():
                child.widget().deleteLater()

        # for i in reversed(range(groups_layout.count())):
            # groups_layout.itemAt(i).widget().setParent(None)

        for g in self.data:
            for _ in g.keys(): # –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã
                _group_name = QRadioButton(_)
                self.groups_list.append(_group_name)
                groups_box.addButton(_group_name)
                self.groups_layout.addWidget(_group_name)
        self.gb_groups.setLayout(self.groups_layout)
        groups_box.setExclusive(False)
        self.groups_list[0].setChecked(True)
        groups_box.setExclusive(True)
        self.fill_table()

    def fill_table(self):
        for g in self.groups_list: ###############
            if g.isChecked():
                self.current_group_name = g
                self.table.clear()
                self.table.setHorizontalHeaderLabels(["–§–∞–º–∏–ª–∏—è –ò–º—è"])
                row = 0
                for p in self.data:
                    if g.text() in p:
                        for _ in p[g.text()]:
                            self.table.setItem(row, 0, QTableWidgetItem(_)) # self.data[q.getText()]
                            row += 1
                self.edit_gr_name.setText(g.text())
                return
            else:
                continue

    def enabled_rename_button(self):
        if self.edit_gr_name.text() == self.current_group_name.text():
            self.rename_group_btn.setEnabled(False)
        else:
            self.rename_group_btn.setEnabled(True)

    def rename_group(self):
        for dic in self.data:
            if self.current_group_name.text() in dic:
                dic[self.edit_gr_name.text()] = dic[self.current_group_name.text()]
                del dic[self.current_group_name.text()]
                self.current_group_name.setText(self.edit_gr_name.text())
        self.enabled_rename_button()
        with open("data_test.json", "w") as file:
            json.dump(self.data, file, ensure_ascii=False)
        self.fill_group_names()

    def add_group(self):
        num, ok = QInputDialog.getText(self, "–ö—É–¥–∞ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É?", "–£–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –ø–æ –ø–æ—Ä—è–¥–∫—É, –Ω–∞—á–∏–Ω–∞—è —Å 1:")
        if ok and num != "":
            try:
                num = int(num)
            except:
                print("–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º")
            else:
                self.data.insert(num-1,{self.edit_gr_name.text():[]})
                self.table.clear()
                with open("data_test.json", "w") as file:
                    json.dump(self.data, file, ensure_ascii=False)
                self.fill_group_names()

    def remove_group(self):############## —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã –≤—Ç–æ—Ä–æ–π —Ä–∞–∑, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
        # –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–¥–æ –æ—á–∏—â–∞—Ç—å —Å–ø–∏—Å–æ–∫ self.group_list
        for dic in self.data:
            if self.edit_gr_name.text() in dic:
                # self.groups_list.remove(self.edit_gr_name.text())
                self.data.remove(dic)
                # del dic[self.current_group_name.text()]
        self.enabled_rename_button()
        with open("data_test.json", "w") as file:
            json.dump(self.data, file, ensure_ascii=False)
        self.fill_group_names()


if __name__ == "__main__":
    app = QApplication([])
    groupEditorWin = MainWidget()
    app.exec_()
